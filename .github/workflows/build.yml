name: Build and Release Minecraft Mod

on:
  push:
    branches:
      - main
  release:
    types: [published]

env:
  JAVA_VERSION: '21'
  GRADLE_BUILD_TASK: 'build'
  ARTIFACT_STAGING_DIR: './artifacts_to_upload'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'gradle'

      - name: Grant Execute Permissions for Gradle Wrapper
        run: chmod +x gradlew

      - name: Build Mod
        run: ./gradlew ${{ env.GRADLE_BUILD_TASK }}

      - name: Create Staging Directory
        run: mkdir -p ${{ env.ARTIFACT_STAGING_DIR }}

      - name: Collect Main Mod JARs into Staging Directory
        run: |
          find versions -type f -path "*/build/libs/*.jar" \
            ! -name "*-sources.jar" \
            ! -name "*-javadoc.jar" \
            -exec cp {} ${{ env.ARTIFACT_STAGING_DIR }}/ \;

      - name: List Staged Files
        run: ls -l ${{ env.ARTIFACT_STAGING_DIR }}

      - name: Upload Flattened Mod JARs as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mod-jars
          path: ${{ env.ARTIFACT_STAGING_DIR }}/
          retention-days: 7

  release:
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all Flattened Mod JARs
        uses: actions/download-artifact@v4
        with:
          name: mod-jars

      - name: List Downloaded Files
        run: ls -R

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: "*.jar"
          prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.secrets.GITHUB_TOKEN }}